---
swagger: "2.0"
info:
  description: Delilah Restó es un proyecto de BackEnd dedicado a la creación y funcionamiento de una RestfullAPI. Creado para Acamica DWFS-BOG-GLOB01 2020
  version: 1.0.0
  title: Delilah Restó
  contact:
    email: gisellp.gutierrezl@gmail.com
host: virtserver.swaggerhub.com
basePath: /Gissg/DelilahRestoAPI/1.0.0
tags:
- name: products
  description: Productos dentro de la App
- name: orders
  description: Ordenes que se realizan en la App
- name: users
  description: Usuarios dentro de la App
schemes:
- https
paths:
  /products:
    get:
      tags:
      - Productos
      summary: Ver todos los productos
      description: ""
      operationId: getProducts
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "404":
          description: Producto no encontrado
      security:
      - token: []
    post:
      tags:
      - Productos
      summary: Agregar un producto
      description: ""
      operationId: addProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Producto por agregar a la base de datos
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        "200":
          description: Lista de productos
        "400":
          description: Error en la petición
      security:
      - token: []
  /products/{productId}:
    get:
      tags:
      - Productos
      summary: Consultar un producto.
      description: ""
      operationId: getPetById
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID del producto
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Producto correspondiente al ID especificado
          schema:
            $ref: '#/definitions/Product'
        "404":
          description: Producto no encontrado
      security:
      - token: []
    put:
      tags:
      - Productos
      summary: Actualizar un producto
      description: ""
      operationId: updateProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID del producto a actualizar
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Producto a actualizar
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        "400":
          description: Datos incorrectos
      security:
      - token: []
    delete:
      tags:
      - Productos
      summary: Eliminar un producto
      description: ""
      operationId: deleteProduct
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: Id de producto a eliminar
        required: true
        type: integer
        format: int64
      responses:
        "204":
          description: Eliminación correcta
        "404":
          description: Producto no encontrado
      security:
      - token: []
  /signin:
    post:
      tags:
      - Usuarios
      summary: Crear un usuario
      description: Creación de un usuario para usar la app
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Usuario creado
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "201":
          description: Registro exitoso
  /login:
    post:
      tags:
      - Usuarios
      summary: Ingreso de un usuario al sistema
      description: ""
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - name: username
        in: query
        description: El correo o el username del usuario
        required: true
        type: string
      - name: password
        in: query
        description: La contraseña del usuario
        required: true
        type: string
      responses:
        "200":
          description: Login exitoso
          schema:
            type: string
        "400":
          description: Correo/Usuario o contraseña incorrectos
securityDefinitions:
  token:
    type: apiKey
    name: token
    in: header
definitions:
  User:
    type: object
    required:
    - address
    - email
    - fullname
    - password
    - phone
    - username
    properties:
      id:
        type: integer
        format: int64
      fullname:
        type: string
        example: Freddy Mercury
      username:
        type: string
        example: queen_freddie
      email:
        type: string
        example: freddiemercury@gmail.com
      password:
        type: string
        example: +44 771 234 56 78
      phone:
        type: string
        example: 1 Logan PIKensington, London W8 6DE, UK
      address:
        type: string
        example: Qu3enFr3ddy
  Product:
    type: object
    required:
    - description
    - name
    - photo
    - price
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Ensalada Veggie
      description:
        type: string
        example: Deliciosa ensalada, ideal para la hora de la cena.
      photo:
        type: string
        example: http://dummyimage.com/200x247.bmp/5fa2dd/ffffff
      price:
        type: integer
        example: 340
  Order:
    type: object
    required:
    - payment
    - products
    properties:
      id:
        type: integer
      description:
        type: string
      payment:
        type: string
        enum:
        - Efectivo
        - Débito
        - Crédito
      user_id:
        type: integer
      state:
        type: string
        enum:
        - Nuevo
        - Confirmado
        - Preparando
        - Enviando
        - Entregado
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
      user:
        $ref: '#/definitions/User'
